{"version":3,"sources":["components/NavigationBar.js","components/HomepageNews.js","components/News.js","components/Stocks.js","index.js"],"names":["NavigationBar","useState","randomStocks","setRandomStocks","symbol","setSymbol","useEffect","Fragment","className","to","style","textDecoration","pathname","state","Math","floor","random","length","type","onChange","e","target","value","placeholder","HomepageNews","homepageData","map","news","x","src","urlToImage","alt","href","url","rel","title","description","News","newsData","Stocks","Plot","createPlotlyComponent","Plotly","location","useLocation","date","setDate","open","setOpen","allData","setAllData","stocksFetchDaily","axios","get","then","data","dateArray","openArray","property","push","i","catch","error","console","log","handleRangeChange","stocksFetchWeekly","apiKey","process","stocksFetchMonthly","undefined","name","y","mode","marker","color","backgroundColor","layout","width","height","toUpperCase","Site","homepageArticles","setHomepageArticles","fullArticles","setFullArticles","homepageArticlesArray","dataArray","articles","slice","newsFetch","path","render","props","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e0b2d7d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavigationBar = () => {\r\n    const [randomStocks, setRandomStocks] = useState([])\r\n    const [symbol, setSymbol] = useState([])\r\n\r\n    useEffect(() => {\r\n        setRandomStocks(['AAPL', 'AMZN', 'MSFT', 'FB', 'GOOGL'])\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <nav className=\"navigation-bar\">\r\n                <div className=\"navigation-bar-left\">\r\n                    <Link to='/' style={{ textDecoration: 'none' }}>\r\n                        <h2 className=\"navigation-logo\">StockOp</h2>\r\n                    </Link>\r\n                    <Link to='/news' style={{ textDecoration: 'none' }}>\r\n                        <h3 className=\"navigation-news\">News</h3>\r\n                    </Link>\r\n                    <Link to={{ pathname: '/stocks', state: { symbol: randomStocks[Math.floor(Math.random() * randomStocks.length)] }}} style={{ textDecoration: 'none' }}>\r\n                        <h3 className=\"navigation-stocks\">Stocks</h3>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"navigation-bar-middle\">\r\n                    <input type=\"text\" onChange={e => {\r\n                        setSymbol(e.target.value)\r\n                    }} placeholder='Enter A Symbol(ex. AMZN)'/>\r\n                    <Link to={{ pathname: '/stocks', state: { symbol: symbol }}}>\r\n                        <button type='button'>Search</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"navigation-bar-right\">\r\n                    <div className=\"user-name-email-container\">\r\n                        <h4 className=\"user-name\">Lorem Ipsum</h4>\r\n                        <h4 className=\"user-email\">loremipsum@stockop.io</h4>\r\n                    </div>\r\n                    <div className=\"user-avatar-container\">\r\n                        <i className=\"far fa-user fa-2x\"></i>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NavigationBar","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HomepageNews = ({ homepageData }) => {\r\n    return (\r\n        <section className=\"homepage-news-section main-sections\">\r\n            <div className=\"page-header-container\">\r\n                <h2 className=\"header\">Latest in Finance</h2>\r\n                <Link to='/news' style={{ textDecoration: 'none' }}>\r\n                    <h2 className=\"header-link\">More</h2>\r\n                </Link>\r\n            </div>\r\n            <section className=\"article-section\">\r\n                <div className=\"article-container\">\r\n                    {homepageData.map( (news, x) => {\r\n                        return (\r\n                            <article className={`article-${x} articles`} key={x}>\r\n                                <img src={news.urlToImage} alt=\"News Article\" className='article-image' />\r\n                                <div className=\"article-info-container\">\r\n                                    <a href={news.url} target='_blank' rel='noreferrer'>{news.title}</a>\r\n                                    <p>{news.description}</p>\r\n                                </div>\r\n                            </article> \r\n                        )\r\n                    })}\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HomepageNews","import React from 'react'\r\n\r\nconst News = ({ newsData }) => {\r\n    return (\r\n        <section className=\"news-section main-sections\">\r\n            <div className=\"page-header-container\">\r\n                <h2 className=\"header\">Latest News</h2>\r\n            </div>\r\n            <section className=\"article-section\">\r\n                <div className=\"article-container\">\r\n                    {newsData.map( (news, x) => {\r\n                        return (\r\n                            <article className={`article-${x} articles`} key={x}>\r\n                                <img src={news.urlToImage} alt=\"News Article\" className='article-image' />\r\n                                <div className=\"article-info-container\">\r\n                                    <a href={news.url} target='_blank' rel='noreferrer'>{news.title}</a>\r\n                                    <p>{news.description}</p>\r\n                                </div>\r\n                            </article> \r\n                        )\r\n                    })}\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default News","import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Plotly from 'plotly.js-basic-dist'\r\nimport createPlotlyComponent from 'react-plotly.js/factory'\r\nimport axios from 'axios'\r\n\r\nconst Stocks = () => {\r\n    const Plot = createPlotlyComponent(Plotly)\r\n    const location = useLocation()\r\n    const { symbol } = location.state\r\n\r\n    const [date, setDate] = useState([])  \r\n    const [open, setOpen] = useState([])\r\n    const [allData, setAllData] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(location.state === undefined) {\r\n            return\r\n        }\r\n\r\n        stocksFetchDaily()\r\n    }, [symbol])\r\n\r\n    function stocksFetchDaily() {\r\n        const apiKey = 'JJUBC7XRCPMF6KME'\r\n        const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${apiKey}`\r\n\r\n        axios.get(url).then((data) => {\r\n        let dateArray = []\r\n        let openArray = []    \r\n        \r\n        for(let property in data.data[\"Time Series (Daily)\"]) {\r\n            dateArray.push(property)\r\n        }\r\n        \r\n        for(let i = 0; i < dateArray.length; i++) {\r\n            openArray.push(+data.data[\"Time Series (Daily)\"][dateArray[i]][\"1. open\"])\r\n        }\r\n\r\n        setAllData(data.data)\r\n        setDate(dateArray)\r\n        setOpen(openArray)\r\n    }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n    function stocksFetchWeekly() {\r\n        const apiKey = 'JJUBC7XRCPMF6KME'\r\n        const url = `https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol=${symbol}&apikey=${apiKey}`\r\n\r\n        axios.get(url).then((data) => {\r\n        let dateArray = []\r\n        let openArray = []    \r\n        \r\n        for(let property in data.data[\"Weekly Time Series\"]) {\r\n            dateArray.push(property)\r\n        }\r\n        \r\n        for(let i = 0; i < dateArray.length; i++) {\r\n            openArray.push(+data.data[\"Weekly Time Series\"][dateArray[i]][\"1. open\"])\r\n        }\r\n\r\n        setDate(dateArray)\r\n        setOpen(openArray)\r\n    }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n    function stocksFetchMonthly() {\r\n        const apiKey = `${process.env.REACT_APP_STOCK_API_KEY}`\r\n        const url = `https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=${symbol}&apikey=${apiKey}`\r\n\r\n        axios.get(url).then((data) => {\r\n        let dateArray = []\r\n        let openArray = []    \r\n        \r\n        for(let property in data.data[\"Monthly Time Series\"]) {\r\n            dateArray.push(property)\r\n        }\r\n        \r\n        for(let i = 0; i < dateArray.length; i++) {\r\n            openArray.push(+data.data[\"Monthly Time Series\"][dateArray[i]][\"1. open\"])\r\n        }\r\n\r\n        setDate(dateArray)\r\n        setOpen(openArray)\r\n    }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleRangeChange(e) {\r\n        if(e.target.value === 'daily') {\r\n            stocksFetchDaily()\r\n        } else if(e.target.value === 'weekly') {\r\n            stocksFetchWeekly()\r\n        } else {\r\n            stocksFetchMonthly()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className=\"stock-section main-sections\">\r\n            <div className=\"page-header-container\">\r\n                <h2 className=\"header\">Stocks</h2>\r\n            </div>\r\n            <div className=\"stock-info-section\">\r\n                <div className=\"stock-info-chart-container\">\r\n                    <div className=\"map-container\">\r\n                        <select name=\"date-range\" onChange={e => {\r\n                            handleRangeChange(e)\r\n                        }} className=\"map-date-range\">\r\n                            <option value=\"daily\">Daily</option>\r\n                            <option value=\"weekly\">Weekly</option>\r\n                            <option value=\"monthly\">Monthly</option>\r\n                        </select>\r\n                        <Plot\r\n                            data={[\r\n                            {\r\n                                x: date,\r\n                                y: open,\r\n                                type: 'scatter',\r\n                                mode: 'lines+markers',\r\n                                marker: {color: 'blue', backgroundColor: 'red'},\r\n                            },\r\n                            ]}\r\n                            layout={ {width: 800, height: 400, title: `${symbol.toUpperCase()} Stocks (Open)`} }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"stock-info-container\">\r\n                    <div className=\"stock-info\">\r\n                        <h2 className=\"header\">{symbol.toUpperCase()}</h2>\r\n                        {allData['Time Series (Daily)'] !== undefined && \r\n                            <div className=\"info-container\">\r\n                                <h2>Date: {allData[\"Meta Data\"][\"3. Last Refreshed\"]}</h2>\r\n                                <h2>Open: ${+allData[\"Time Series (Daily)\"][\"2021-08-11\"][\"1. open\"]}</h2>\r\n                                <h2>High: ${+allData[\"Time Series (Daily)\"][\"2021-08-11\"][\"2. high\"]}</h2>\r\n                                <h2>Low: ${+allData[\"Time Series (Daily)\"][\"2021-08-11\"][\"3. low\"]}</h2>\r\n                                <h2>Close: ${+allData[\"Time Series (Daily)\"][\"2021-08-11\"][\"4. close\"]}</h2>\r\n                                <h2>Volume: {+allData[\"Time Series (Daily)\"][\"2021-08-11\"][\"5. volume\"]}</h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Stocks","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport './index.css';\n\nimport NavigationBar from './components/NavigationBar';\nimport HomepageNews from './components/HomepageNews'\nimport News from './components/News';\nimport Stocks from './components/Stocks';\n\nconst Site = () => {\n  const [homepageArticles, setHomepageArticles] = useState([])\n  const [fullArticles, setFullArticles] = useState([])\n\n  useEffect(() => {\n    newsFetch()\n  }, [])\n\n  function newsFetch() {\n    const apiKey = `${process.env.REACT_APP_NEWS_API_KEY}`\n    const url = `https://newsapi.org/v2/everything?q=finance&apiKey=${apiKey}`\n\n    const homepageArticlesArray = []\n\n    axios.get(url).then((data) => {\n        const dataArray = data.data.articles.slice()\n        \n        for(let i = 0; i < 4; i++) {\n            homepageArticlesArray.push(dataArray[i])\n        }\n\n        setFullArticles(data.data.articles)\n    }).catch((error) => {\n        console.log(error)\n    })\n\n    setHomepageArticles(homepageArticlesArray)\n  }\n\n  return (\n    <Router>\n      <React.Fragment>\n        <NavigationBar />\n        <Switch>\n          <Route path='/' render={(props) => <HomepageNews {...props} homepageData={homepageArticles} />}/>\n          <Route path='/news' render={(props) => <News {...props} newsData={fullArticles} />}/>\n          <Route path='/stocks' component={Stocks} />\n        </Switch>\n      </React.Fragment>\n    </Router>\n  )\n}\n\nReactDOM.render(<Site />, document.getElementById('root'))"],"sourceRoot":""}